{"version":3,"sources":["watermark.js"],"names":["E","assign","Object","T","ui_lib","ms","date","be_ui_popup_ext","be_rule","be_ext","be_vpn","be_info","be_tabs","be_premium","be_trial","be_tpopup","be_popup_main","browser","be_util","B","assert_popup","get_url","zutil","get","window","get_root_url","svc_util","get_tab_id","get_connection_id","is_tab_active","flag_cls","c","toLowerCase","get_rule","rules","be_vpn_util","get_rules","get_enabled_rule","rule","enabled","perr","id","info","url","root_url","be_popup_lib","perr_ok","pref_perr","mitm_pref","prefix","is_mitm","get_all_countries","all","pcountries","proxy_countries","bext","filter","sort","a","b","localeCompare","cache","storage","get_json","rule_ratings","ecall","src_country","limit","vpn_only","popular","get_popular_country","host","map","v","proxy_country","concat","start_trial","trial","country","dont_show_ended","err","do_unblock","fcall","size_synced","set_iframe_pos","_opt","width","opt","height","fade","animate","no_animation","animation_time","no_scale_anim","left","right","top","bottom","center","transform","pos","position","split","css","on_mouse","document","removeEventListener","addEventListener","resize_tpopup","set_modal_pos","Wrap","props","children","WATERMARK","SUGGESTION","SUBSCRIBE","VERIFY_EMAIL","Modal_header","login_url","zescape","qs","next","slide","back_click","show_signin","login_click","title","close_click","get_plans","conf","Slides_switch","on_slide_exited","setState","current_slide","state","next_slide","exited_cb","prev_props","prev_state","refresh","common","mountOnEnter","unmountOnExit","timeout","classNames","backward","onExited","React","Children","child","key","PureComponent","Subscribe","close_cb","cookies","set","name","value","expirationDate","Date","now","MIN","stop_vpn_click","set_slide","hide_popup_click","plan_click","plan","slide_exited_cb","sync_size","plans","length","size_cb","free_list","ref","replace","plus_ref","user_id","render_stop_vpn","render_subscribe","Component","Watermark_debug","pattern","on_change","event","target","on_click","match","t","time","SEC","alert","toString","on_close_click","set_json","trigger","style","Watermark","on_storage_dbg_change","debug","click","show_vpn_ui_cb","trial_timer_click","trial_timer_click_cb","arrow_click","$el","e","currentTarget","new_pos","hasClass","arrow_hover","position_cb","on_mouse_leave","hover","on_body_mouse_move","el","ignore_hover","r","parentElement","getBoundingClientRect","x","clientX","y","clientY","endsWith","sqr","radius","r2","on_arrow_mouse_enter","on_arrow_mouse_leave","vpn_work_yes_cb","send_vpn_work_report","src","vpn_work_no_cb","tab_id","send_fix_it_report","nativeEvent","send_logs","on","setTimeout","off","hide_arrow_anim","sync_size_et","return","trial_changed","position_changed","size_changed","show_arrow_anim","arrow_anim","Math","max","get_size","_this","cancel","finally","iframe_opt","get_iframe_size","margin_right","modal_opt","etask","sleep","arrow","direction","size","y_direction","x_direction","up_down","left_right","dbg_style","trial_left","format_time","Vpn_work_buttons","yes_click","no_click","Stop_btn","Hide_popup_btn","Mitm_btn","enable","site","Geo_btn","toUpperCase","Dropdown_list","on_hide","countries","rect","ReactDOM","createPortal","body","More_btn","on_hide_dropdown","opened","unique_number","Set","list_text","slice","join","Suggestion_body","buttons","push","Login_body","HOUR","uri","uuid","get_uuid","Trial_subscribe_body","wait_time","need_wait","waited","start_wait_timer","unblock_cb","waiting","grace_period","tab_active","timer","clearTimeout","wait_ts","timer_tick","next_trial_ts","wait","minutes_per_day","trial_time","timer_ms","Geo_suggestion","ignore","try_again","trial_error","min","busy","site_conf","Stop_vpn_confirmation","stop_vpn","close_vpn","Verify_email","resend_click","resent","email","Popup_base","margin_top","margin_left","margin_bottom","on_show_vpn_ui","mode","is_plus","on_premium_change","update_container","attr","render_inner","Watermark_popup","get_trial_left","monitor_trial","on_user_updated","on_force_trial","on_trial_start","on_trial_change","on_body_click","trial_timer","can_close_watermark","on_close","expire_ts","on_trial_ended","trial_expired","set_mode","user","verified_cb","geo_login_success_sent","unblock_et","require_plus","message","type","inited","init","ui_popup","unmount","unmountComponentAtNode","remove","set_dont_show_again","period","set_tpopup_type","render","is_trial_ended","is_grace_period","force_trial","force_country","rule_enabled","suggestion_conf","get_suggestion_conf","suggested","proxy","suggest_country","force_suggestion","unshift","Array","isArray","all_index","indexOf","includes","splice","must_verify_email","maxWidth","maxHeight","animation","appendTo"],"mappings":"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","file":"watermark.js","sourcesContent":["                   \n'use strict';                                              \nimport 'regenerator-runtime';\nimport $ from 'jquery';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CSSTransition} from 'react-transition-group';\nimport B from '/bext/pub/browser.js';\nimport zutil from '/util/util.js';\nimport etask from '/util/etask.js';\nimport zescape from '/util/escape.js';\nimport date from '/util/date.js';\nimport svc_util from '/svc/vpn/pub/util.js';\nimport be_util from '/bext/pub/util.js';\nimport ui_lib from '/bext/vpn/pub/ui_lib.js';\nimport be_popup_lib from '/bext/pub/popup_lib.js';\nimport be_vpn_util from '/bext/vpn/pub/util.js';\nimport storage from '/util/storage.js';\nimport pcountries from '/protocol/pub/countries.js';\nimport common_ui from '/svc/vpn/pub/common_ui.js';\nconst E = {};\nconst assign = Object.assign, T = ui_lib.T, ms = date.ms;\nlet be_ui_popup_ext, be_rule, be_ext, be_vpn, be_info, be_tabs;\nlet be_premium, be_trial, be_tpopup, be_popup_main;\nconst browser = be_util.browser();\n\nB.assert_popup('be_watermark_popup');\n\nconst get_url = ()=>zutil.get(window, 'hola.tpopup_opt.url');\nconst get_root_url = ()=>svc_util.get_root_url(get_url());\nconst get_tab_id = ()=>zutil.get(window, 'hola.tpopup_opt.tab_id');\nconst get_connection_id = ()=>\n    zutil.get(window, 'hola.tpopup_opt.connection_id');\nconst is_tab_active = ()=>be_tabs&&be_tabs.get('active.id')==get_tab_id();\nconst flag_cls = c=>'flag '+(c||'').toLowerCase();\n\nconst get_rule = ()=>{\n    let rules = be_vpn_util.get_rules(be_rule.get('rules'), get_url());\n    return rules && rules[0] || null;\n};\n\nconst get_enabled_rule = ()=>{\n    let rule = get_rule();\n    if (!rule || !rule.enabled || !be_ext.get('r.vpn.on'))\n        return null;\n    return rule;\n};\n\nconst perr = (id, info)=>{\n    let url = get_url(), root_url = get_root_url();\n    info = assign({url, root_url}, info);\n    be_popup_lib.perr_ok({id, info}, true);\n};\n\nconst pref_perr = ({prefix, is_mitm}, mitm_pref)=>(id, info)=>{\n    prefix = prefix || (is_mitm ? mitm_pref || 'mitm' : 'geo');\n    perr(`${prefix}_${id}`, info);\n};\n\nconst get_all_countries = src_country=>{\n    let root_url = get_root_url();\n    return etask(function*(){\n        let all = pcountries.proxy_countries.bext.filter(c=>c!='KP')\n            .sort((a, b)=>T(a).localeCompare(T(b)));\n        let cache = storage.get_json('popup_rating_cache');\n        let rule_ratings = cache && root_url==cache.root_url &&\n            cache.rule_ratings || (yield be_rule.ecall('get_rule_ratings',\n            [{root_url, src_country, limit: 20, vpn_only: true}]));\n        let popular = be_vpn_util.get_popular_country({host: root_url,\n            rule_ratings}).map(v=>v.proxy_country);\n        return popular.concat(all);\n    });\n};\n\nconst start_trial = country=>{\n    let root_url = get_root_url();\n    return etask(function*(){\n        try {\n            let trial = (yield be_trial.ecall('get_trial_active', [root_url]))\n                || (yield be_trial.ecall('set_trial', [root_url]));\n            yield be_info.ecall('set_site_storage', [root_url, 'trial',\n                {country, dont_show_ended: false}]);\n            return trial;\n        } catch(e){\n            perr('geo_suggestion_start_trial_err', {country, err: e});\n            throw e;\n        }\n    });\n};\n\nconst do_unblock = (country, trial)=>{\n    be_vpn.ecall('enable_geo_rule', [get_url(), country, get_tab_id(),\n        trial && 'trial']);\n    be_tpopup.fcall('resume_videos', [get_connection_id()]);\n};\n\nlet size_synced;\nconst set_iframe_pos = opt=>{\n    let _opt = {\n        width: `${opt.width}px`,\n        height: `${opt.height}px`,\n        fade: !!opt.fade,\n        animate: size_synced && !opt.no_animation,\n        animation_time: opt.animation_time,\n        no_scale_anim: opt.no_scale_anim,\n    };\n    _opt.left = _opt.right = _opt.top = _opt.bottom = 'auto';\n    if (opt.center)\n    {\n        _opt.top = _opt.left = '50%';\n        _opt.transform = 'translate(-50%, -50%)';\n    }\n    else\n    {\n        let pos = opt.position.split('_');\n        _opt[pos[0]] = (opt['margin_'+pos[0]]||0)+'px';\n        _opt[pos[1]] = (opt['margin_'+pos[1]]||0)+'px';\n    }\n    size_synced = true;\n                                                                   \n                                                                 \n                                            \n    $('body').css({'pointer-events': 'none'});\n    const on_mouse = ()=>{\n        document.removeEventListener('mousemove', on_mouse);\n        document.removeEventListener('mouseenter', on_mouse);\n        document.removeEventListener('mouseleave', on_mouse);\n        $('body').css({'pointer-events': ''});\n    };\n    document.addEventListener('mousemove', on_mouse);\n    document.addEventListener('mouseenter', on_mouse);\n    document.addEventListener('mouseleave', on_mouse);\n    return be_popup_main.resize_tpopup(_opt);\n};\n\nconst set_modal_pos = opt=>{\n    let css = {width: `${opt.width}px`, height: `${opt.height}px`};\n    css.left = css.right = css.top = css.bottom = 'auto';\n    let pos = opt.position.split('_');\n    css[pos[0]] = '0';\n    css[pos[1]] = '0';\n    $('#all').css(css);\n};\n\n                                                   \nE.Wrap = props=>props.children;\n\nconst WATERMARK = 'watermark', SUGGESTION = 'suggestion';\nconst SUBSCRIBE = 'subscribe', VERIFY_EMAIL = 'verify_email';\n\nE.Modal_header = function Modal_header(props){\n    let url = get_url();\n    let login_url = 'https://hola.org/login?'+zescape.qs({next: url});\n    return (\n        <div className={'modal-header '+(props.slide||'')}>\n          {props.back_click &&\n          <button className=\"go-back\" onClick={props.back_click}>\n            <div className=\"icon\"/>\n          </button>}\n          <a className=\"logo\" href=\"https://hola.org\" target=\"_blank\"\n            rel=\"noopener noreferrer\"/>\n          {props.show_signin &&\n          <a className=\"sign-in\" onClick={props.login_click}\n            href={login_url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <T>Log in</T></a>}\n          {props.title && <h1><T>{props.title}</T></h1>}\n          <button className=\"close\" onClick={props.close_click}/>\n        </div>\n    );\n};\n\nconst get_plans = ()=>{\n    let conf = be_ext.get('bext_config');\n    return zutil.get(conf, 'plans', ['1m', '1y']);\n};\n\nclass Slides_switch extends React.PureComponent {\n    constructor(props){\n        super(props);\n        this.state = {current_slide: this.props.slide, next_slide: null};\n    }\n    componentDidUpdate(prev_props, prev_state){\n        let {props} = this;\n        if (prev_props.slide!=props.slide || prev_props.refresh!=props.refresh)\n            this.setState({current_slide: null, next_slide: props.slide});\n    }\n    on_slide_exited = ()=>{\n        this.setState({current_slide: this.state.next_slide,\n            next_slide: null});\n        if (this.props.exited_cb)\n            this.props.exited_cb();\n    };\n    render(){\n        let {state, props} = this;\n        let common = {\n            mountOnEnter: true,\n            unmountOnExit: true,\n            timeout: 200,\n            classNames: props.backward ? 'slide-backward' : 'slide-forward',\n            onExited: this.on_slide_exited,\n        };\n        return React.Children.map(props.children, child=>{\n            return (\n                <CSSTransition key={'transition_'+child.key}\n                  in={state.current_slide==child.key}\n                  {...common}>\n                  {child}\n                </CSSTransition>\n            );\n        });\n    }\n}\n\nE.Subscribe = class Subscribe extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = this.state||{};\n        this.state.slide = 'stop_vpn';\n        this.state.plans = get_plans();\n        this.sync_size(this.state.slide);\n    }\n    componentDidMount(){\n        this.perr('show');\n    }\n    perr(id, info){\n        pref_perr(this.props)(`subscribe_${id}`, info);\n    }\n    sync_size(slide){\n        let width, height;\n        if (slide=='stop_vpn')\n        {\n            width = 550;\n            height = 362;\n        }\n        else\n        {\n            width = 50+250*(get_plans().length+1)+40;\n            height = 564;\n        }\n        this.props.size_cb({width: width+8, height: height+8, fade: true,\n            center: true}, {width, height});\n    }\n    close_click = ()=>{\n        this.perr('close');\n        this.props.close_cb();\n    };\n    login_click = ()=>{\n        B.cookies.set({\n            url: 'https://hola.org',\n            name: 'bext_login_origin',\n            value: get_root_url(),\n            expirationDate: (Date.now()+5*ms.MIN)/1000,\n        });\n        this.perr('login');\n    };\n    stop_vpn_click = ()=>{\n        this.perr('stop_vpn');\n        be_vpn.fcall('stop_vpn', [get_url(), get_tab_id()]);\n    };\n    back_click = ()=>this.set_slide('stop_vpn', true);\n    hide_popup_click = ()=>{\n        this.perr('hide_popup');\n        this.set_slide('subscribe');\n    };\n    plan_click = plan=>{\n        this.perr('plan_click', {plan});\n        if (plan=='free')\n            this.props.close_cb();\n    };\n    set_slide(slide, backward){\n        this.setState({slide, backward: !!backward});\n    }\n    slide_exited_cb = ()=>this.sync_size(this.state.slide);\n    render_stop_vpn(){\n        let {props} = this;\n        return (\n            <div className=\"modal-body\" key=\"stop_vpn\">\n              <div className=\"buttons-container\">\n                <Stop_btn on_click={this.stop_vpn_click} title=\"Stop vpn\"\n                  country={props.country} is_mitm={props.is_mitm}/>\n                <Hide_popup_btn on_click={this.hide_popup_click}\n                  title=\"Hide popup\"/>\n              </div>\n            </div>\n        );\n    }\n    render_subscribe(){\n        let root_url = get_root_url();\n        let free_list = ['Unblock any site', '2 hour/day video streaming',\n            '2 connected devices', 'SD video streaming'];\n        let ref = (this.props.is_mitm ? 'mitm_popup_' : 'watermark_')+\n            root_url.replace(/\\./g, '_');\n        return (\n            <div className=\"modal-body subscribe-body\" key=\"subscribe\">\n              <div className=\"buttons-container\">\n                <common_ui.Free_plan on_click={this.plan_click}\n                  sub_title=\"Show popup\" list={free_list}/>\n                {this.state.plans.map(plan=>\n                  <common_ui.Plan key={plan} plan={plan}\n                    on_click={this.plan_click}\n                    href={be_vpn_util.plus_ref(ref, {plan, root_url})}/>)}\n              </div>\n            </div>\n        );\n    }\n    render(){\n        let {state} = this;\n        let user_id = be_ext.get('user_id');\n        return (\n            <E.Wrap>\n              <E.Modal_header login_click={this.login_click}\n                slide={state.slide}\n                show_signin={!user_id}\n                back_click={state.slide=='subscribe' && this.back_click}\n                title={state.slide=='subscribe' && 'Choose your plan'}\n                close_click={this.close_click}/>\n                <Slides_switch slide={state.slide}\n                  backward={state.backward}\n                  exited_cb={this.slide_exited_cb}>\n                  {this.render_stop_vpn()}\n                  {this.render_subscribe()}\n                </Slides_switch>\n            </E.Wrap>\n        );\n    }\n};\n\nclass Watermark_debug extends React.PureComponent {\n    state = {value: '00:15'};\n    pattern = '\\\\d{1,2}:\\\\d{1,2}';\n    on_change = event=>this.setState({value: event.target.value});\n    on_click = ()=>{\n        let {value} = this.state;\n        if (!value.match(this.pattern))\n            return;\n        let t = value.split(':');\n        let time = t[0]*ms.MIN + t[1]*ms.SEC;\n        etask(function*(){\n            try {\n                yield be_trial.ecall('set_time_left', [get_root_url(), time]);\n            } catch(e){ alert(e.toString()); }\n        });\n    };\n    on_close_click = ()=>{\n        storage.set_json('be_watermark_debug', false);\n        be_vpn.trigger('storage_debug_change');\n    };\n    render(){\n        let {state, props} = this;\n        return (\n            <div className=\"watermark-debug\" style={props.style}>\n              <input value={state.value} onChange={this.on_change}\n                pattern={this.pattern}/>\n              <button onClick={this.on_click}>set</button>\n              <button className=\"close\" onClick={this.on_close_click}/>\n            </div>\n        );\n    }\n}\n\nE.Watermark = class Watermark extends React.PureComponent {\n    constructor(props){\n        super(props);\n        this.state = {arrow_hover: null, hover: false, ignore_hover: true,\n            debug: storage.get_json('be_watermark_debug')};\n        this.sync_size();\n    }\n    componentDidMount(){\n        this.perr('show');\n        be_tpopup.on('mouseleave', this.on_mouse_leave);\n        $('body').on('mousemove', this.on_body_mouse_move);\n        be_vpn.on('storage_debug_change', this.on_storage_dbg_change);\n                                                                         \n        setTimeout(()=>this.setState({ignore_hover: false}), 300);\n    }\n    componentWillUnmount(){\n        be_tpopup.off('mouseleave', this.on_mouse_leave);\n        $('body').off('mousemove', this.on_body_mouse_move);\n        be_vpn.off('storage_debug_change', this.on_storage_dbg_change);\n        this.hide_arrow_anim();\n        if (this.sync_size_et)\n            this.sync_size_et.return();\n    }\n    on_storage_dbg_change = ()=>\n        this.setState({debug: storage.get_json('be_watermark_debug')});\n    perr(id, info){\n        pref_perr(this.props)(`watermark_${id}`, info);\n    }\n    componentDidUpdate(prev_props, prev_state){\n        let trial_changed = this.props.trial!=prev_props.trial;\n        let position_changed = this.props.position!=prev_props.position;\n        let size_changed = this.state.hover!=prev_state.hover || trial_changed;\n        if (position_changed || size_changed)\n            this.sync_size(position_changed, size_changed);\n        if (position_changed)\n            this.setState({hover: false});\n        if (position_changed || trial_changed)\n            this.hide_arrow_anim();\n        else if (this.state.arrow_hover!=prev_state.arrow_hover)\n        {\n            if (this.state.arrow_hover)\n                this.show_arrow_anim();\n            else\n                this.hide_arrow_anim();\n        }\n    }\n    get_size(arrow_anim){\n        let width = this.props.is_mitm ? 82 : 95;\n        let height = 28;\n        if (this.props.trial)\n            width += 62;\n        if (this.state.hover)\n        {\n            width = Math.max(width+50, 166);\n            if (!arrow_anim)\n                height += 75;\n        }\n        return {width, height};\n    }\n    get_iframe_size(arrow_anim){\n        let {width, height} = this.get_size();\n        if (!arrow_anim && this.state.debug)\n            width += 115;\n        return {width: width+12, height: height+24};\n    }\n    sync_size(position_changed, size_changed){\n        let _this = this;\n        if (this.sync_size_et)\n            this.sync_size_et.return();\n        etask({cancel: true}, function*(){\n            _this.sync_size_et = this;\n            this.finally(()=>{ _this.sync_size_et = null; });\n            let {width, height} = _this.get_size();\n            let iframe_opt = assign({}, _this.get_iframe_size(), {\n                margin_right: 15,\n                no_animation: size_changed,\n                animation_time: position_changed ? 300 : 200,\n                no_scale_anim: position_changed,\n                position: _this.props.position,\n            });\n            let modal_opt = {width, height, position: _this.props.position};\n            if (!size_changed)\n            {\n                set_modal_pos(modal_opt);\n                yield set_iframe_pos(iframe_opt);\n            }\n            else if (_this.state.hover)\n            {\n                yield set_iframe_pos(iframe_opt);\n                set_modal_pos(modal_opt);\n            }\n            else\n            {\n                set_modal_pos(modal_opt);\n                yield etask.sleep(300);\n                yield set_iframe_pos(iframe_opt);\n            }\n        });\n    }\n    show_arrow_anim(){\n        let {width, height} = this.get_iframe_size(true);\n        let arrow = this.state.arrow_hover;\n        let pos = this.props.position.split('_');\n        let direction, css = {};\n        if (arrow=='up-down')\n        {\n            css.height = `calc(100% - ${height}px)`;\n            css.width = `${width}px`;\n            css[pos[0]] = `${height}px`;\n            css[pos[1]] = pos[1]=='right' ? '15px' : '0';\n            direction = pos[0]=='top' ? 'down' : 'up';\n        }\n        else\n        {\n            css.width = `calc(100% - ${width}px)`;\n            css.height = `${height}px`;\n            css[pos[1]] = `${width}px`;\n            css[pos[0]] = '0';\n            direction = pos[1]=='right' ? 'left' : 'right';\n        }\n        be_tpopup.fcall('show_arrow_anim', [get_connection_id(), {css,\n            direction, size: this.get_size(true)}]);\n    }\n    hide_arrow_anim(){\n        be_tpopup.fcall('hide_arrow_anim', [get_connection_id()]);\n    }\n    close_click = ()=>{\n        this.perr('close');\n        this.props.close_cb();\n    };\n    click = ()=>{\n        this.perr('click');\n        this.props.show_vpn_ui_cb();\n    };\n    trial_timer_click = ()=>{\n        this.perr('trial_timer_click');\n        this.props.trial_timer_click_cb();\n    };\n    arrow_click = e=>{\n        let pos = this.props.position.split('_');\n        let $el = $(e.currentTarget);\n        let new_pos;\n        if ($el.hasClass('arrow-left'))\n            new_pos = `${pos[0]}_left`;\n        else if ($el.hasClass('arrow-right'))\n            new_pos = `${pos[0]}_right`;\n        else if ($el.hasClass('arrow-down'))\n            new_pos = `bottom_${pos[1]}`;\n        else\n            new_pos = `top_${pos[1]}`;\n        if (this.state.arrow_hover)\n        {\n            this.props.position_cb(new_pos);\n            this.setState({arrow_hover: null});\n        }\n        else\n            this.props.position_cb(new_pos);\n        this.perr('arrow', {new_pos});\n    };\n    on_mouse_leave = e=>this.setState({arrow_hover: null, hover: false});\n    on_body_mouse_move = e=>{\n        if (!this.el || this.state.ignore_hover)\n            return;\n        let r = this.el.parentElement.getBoundingClientRect();\n        let x = e.clientX, y = e.clientY;\n        let left = r.left-3;                        \n        let right = r.right, top = r.top, bottom = r.bottom;\n        if (this.state && this.state.debug && this.state.hover)\n        {\n            if (this.props.position.endsWith('_right'))\n                left -= 120;\n            else\n                right += 120;\n        }\n        let sqr = v=>v*v;\n        let radius = 14, r2 = sqr(radius), hover;\n                                          \n        if (x>right-radius && y>bottom-radius)\n            hover = sqr(x-right+radius)+sqr(y-bottom+radius)<=r2;\n        else if (x>right-radius && y<top+radius)\n            hover = sqr(x-right+radius)+sqr(top+radius-y)<=r2;\n        else if (x<left+radius && y>bottom-radius)\n            hover = sqr(left+radius-x)+sqr(y-bottom+radius)<=r2;\n        else if (x<left+radius && y<top+radius)\n            hover = sqr(left+radius-x)+sqr(top+radius-y)<=r2;\n        else\n            hover = x>=left && x<=right && y>=top && y<=bottom;\n        this.setState({hover});\n    };\n    on_arrow_mouse_enter = e=>{\n        let $el = $(e.currentTarget), arrow_hover;\n        if ($el.hasClass('left-right'))\n            arrow_hover = 'left-right';\n        else if ($el.hasClass('up-down'))\n            arrow_hover = 'up-down';\n        this.setState({arrow_hover});\n    };\n    on_arrow_mouse_leave = e=>this.setState({arrow_hover: null});\n    get_rule(){\n        return this.props.is_mitm ?\n            {country: 'us', is_mitm: true, tab_id: get_tab_id()} :\n            get_enabled_rule();\n    }\n    vpn_work_yes_cb = event=>{\n        this.setState({hover: false});\n        be_ui_popup_ext.send_vpn_work_report({\n            rule: this.get_rule(),\n            src_country: (this.props.src_country||'').toLowerCase(),\n            src: 'watermark',\n        });\n    };\n    vpn_work_no_cb = event=>{\n        this.setState({hover: false});\n        let src_country = (this.props.src_country||'').toLowerCase();\n        let rule = this.get_rule();\n        if (!rule)\n            return;\n        let tab_id = get_tab_id();\n        be_rule.ecall('fix_vpn', [{rule, root_url: get_root_url(),\n            url: get_url(), tab_id, src_country}]);\n        be_ext.fcall('trigger', ['ui_not_working', {tab_id,\n            src: 'watermark'}]);\n        be_ui_popup_ext.send_fix_it_report({rule, src_country,\n            event: event.nativeEvent, send_logs: true, src: 'watermark'});\n    };\n    render(){\n        let {props, state} = this;\n        let {arrow_hover} = state;\n        let pos = props.position.split('_');\n        let y_direction = pos[0]=='top' ? 'down' : 'up';\n        let x_direction = pos[1]=='right' ? 'left' : 'right';\n        let up_down = `arrow-btn up-down arrow-${y_direction} `+\n            (arrow_hover=='up-down' ? ' hover' : '');\n        let left_right = `arrow-btn left-right arrow-${x_direction} `+\n            (arrow_hover=='left-right' ? ' hover' : '');\n        let dbg_style = pos[1]=='right' ? {left: '-122px'} : {right: '-120px'};\n        return (\n            <E.Wrap>\n              <div className={'modal-header'+(state.hover ? ' hover' : '')}\n                ref={el=>this.el = el}>\n                <div className=\"logo-wrap\" onClick={this.click}>\n                  <div className=\"logo\"/>\n                </div>\n                <div className=\"flag-wrap\" onClick={this.click}>\n                  {props.is_mitm &&\n                  <div className=\"unblocking-img\"/>}\n                  {!props.is_mitm &&\n                  <div className=\"selected-country f32\">\n                    <span className={flag_cls(props.country)}/>\n                  </div>}\n                </div>\n                {!!props.trial_left &&\n                <div className=\"trial-timer\" onClick={this.trial_timer_click}>\n                  {ui_lib.format_time(props.trial_left)}\n                </div>}\n                <div className=\"arrow-buttons\">\n                  <button className={left_right} onClick={this.arrow_click}\n                    onMouseEnter={this.on_arrow_mouse_enter}\n                    onMouseLeave={this.on_arrow_mouse_leave}>\n                    <div className=\"arrow-anim\">\n                      <div className=\"arrow-icon\"/>\n                  </div>\n                  </button>\n                  <button className={up_down} onClick={this.arrow_click}\n                    onMouseEnter={this.on_arrow_mouse_enter}\n                    onMouseLeave={this.on_arrow_mouse_leave}>\n                    <div className=\"arrow-anim\">\n                      <div className=\"arrow-icon\"/>\n                    </div>\n                  </button>\n                </div>\n                <button className=\"close\" onClick={this.close_click}/>\n                {state.debug && !!props.trial_left &&\n                <Watermark_debug style={dbg_style}/>}\n              </div>\n              <div className=\"modal-body\">\n                {state.hover && <Vpn_work_buttons\n                  no_click={this.vpn_work_no_cb}\n                  yes_click={this.vpn_work_yes_cb}/>}\n              </div>\n            </E.Wrap>\n        );\n    }\n};\n\nclass Vpn_work_buttons extends React.PureComponent {\n    render(){\n        let {props} = this;\n        return (\n            <div className=\"vpn-work-buttons\">\n              <div className=\"title\"><T>Is it working?</T></div>\n              <div className=\"buttons\">\n                <button className=\"btn-yes\" onClick={props.yes_click}>\n                  <T>Yes</T>\n                </button>\n                <button className=\"btn-no\" onClick={props.no_click}>\n                  <T>No</T>\n                </button>\n              </div>\n            </div>\n        );\n    }\n}\n\nclass Stop_btn extends React.PureComponent {\n    render(){\n        let {props} = this;\n        return (\n            <div className=\"action-button stop-btn\"\n              onClick={props.on_click}>\n              <div className=\"action-button-inner\">\n                <div className=\"vpn-switch\">\n                  <div className=\"power-switch\"/>\n                  <div className=\"fsvg_4x3\">\n                    <div className={flag_cls(props.is_mitm ?\n                      'flag_mitm' : props.country||'us')}/>\n                    <div className=\"strike-line\"/>\n                  </div>\n                </div>\n                <div className=\"title\"><T>{props.title}</T></div>\n              </div>\n            </div>\n        );\n    }\n}\n\nclass Hide_popup_btn extends React.PureComponent {\n    render(){\n        let {props} = this;\n        return (\n            <div className=\"action-button hide-popup-btn\"\n              onClick={props.on_click}>\n              <div className=\"watermark-anim\">\n                <div className=\"watermark-image\">\n                  <div className=\"watermark-image-logo\"/>\n                  <div className=\"watermark-image-close\"/>\n                </div>\n                <div className=\"cursor\"/>\n              </div>\n              <div className=\"title\"><T>{props.title}</T></div>\n            </div>\n        );\n    }\n}\n\nclass Mitm_btn extends React.PureComponent {\n    on_click = ()=>this.props.on_click();\n    render(){\n        let {enable} = this.props;\n        let site = get_root_url();\n        return (\n            <div className=\"action-button mitm-unblock\"\n              onClick={this.on_click}>\n              <div className={enable ? 'unlock-anim' : 'lock-anim'}>\n                <div className=\"power-switch\"/>\n                <div className=\"img-wrapper\">\n                  <div className=\"lock-img\"/>\n                  <div className=\"unlock-img\"/>\n                  <div className=\"strike-line\"/>\n                </div>\n              </div>\n              <div className=\"title\">\n                {enable ?\n                <T>Unblock <span className=\"site-name\">{site}</span></T> :\n                <T>Continue without VPN</T>}\n              </div>\n            </div>\n        );\n    }\n}\n\nclass Geo_btn extends React.PureComponent {\n    on_click = ()=>this.props.on_click(this.props.country);\n    render(){\n        let {country, enable} = this.props;\n        let title = this.props.title || (enable ? country.toUpperCase() :\n            'No VPN');\n        return (\n            <div className=\"action-button geo-unblock\" onClick={this.on_click}>\n              <div className=\"action-button-inner\">\n                <div className=\"fsvg_4x3 flag-img\">\n                  <div className={flag_cls(country)}/>\n                </div>\n                <div className=\"title\"><T>{title}</T></div>\n              </div>\n            </div>\n        );\n    }\n}\n\nclass Dropdown_list extends React.PureComponent {\n    componentDidMount(){\n        $('#all').css({filter: 'grayscale(1)'});\n        be_ui_popup_ext.on('body_click', this.props.on_hide);\n    }\n    componentWillUnmount(){\n        $('#all').css({filter: 'none'});\n        be_ui_popup_ext.off('body_click', this.props.on_hide);\n    }\n    render(){\n        let {props} = this, {countries} = props;\n        let style= {\n            top: props.rect.top+'px',\n            left: props.rect.left+'px',\n            width: props.rect.width+'px',\n            height: props.rect.height+'px',\n        };\n        return ReactDOM.createPortal(\n            <div className=\"countries-dropdown-fade\" onClick={props.on_hide}>\n              <div className=\"countries-dropdown\" style={style}>\n                <ul>\n                  {countries.map(c=>\n                  <li key={c} onClick={()=>this.props.on_click(c)}>\n                    <span className=\"f32\">\n                      <span className={flag_cls(c)}/>\n                    </span>\n                    <T>{c.toUpperCase()}</T>\n                  </li>)}\n                </ul>\n              </div>\n            </div>, document.body);\n    }\n}\n\nclass More_btn extends React.PureComponent {\n    constructor(props){\n        super(props);\n        this.state = {opened: false};\n    }\n    on_hide_dropdown = ()=>this.setState({opened: false});\n    on_click = ()=>{\n        this.setState({rect: this.el.getBoundingClientRect(), opened: true});\n    };\n    render(){\n        let {props, state} = this, {countries} = props;\n        let unique_number = (new Set(countries)).size;\n        let list_text = countries.length < 6 ?\n            countries.slice(1).map(c=>T(c.toUpperCase())).join(', ') :\n            <T>Choose from <span>{unique_number}</span> countries</T>;\n        return (\n            <div className=\"action-button geo-unblock more-btn\"\n              ref={el=>this.el = el} onClick={!state.opened && this.on_click}>\n              {state.opened ?\n              <Dropdown_list countries={countries} rect={state.rect}\n                on_click={props.on_click} on_hide={this.on_hide_dropdown}/> :\n              <div className=\"action-button-inner\">\n                <div className=\"fsvg_4x3\">\n                  <div className=\"flag flag_other\"/>\n                </div>\n                <div className=\"title\"><T>More</T></div>\n                <div className=\"more-countries\">\n                  {list_text}\n                </div>\n              </div>}\n            </div>\n        );\n    }\n}\n\nE.Suggestion_body = class Suggestion_body extends React.PureComponent {\n    componentDidMount(){\n        pref_perr(this.props, 'mitm_popup')('suggestion_show');\n    }\n    render(){\n        let {props} = this, {countries} = props;\n        let site = get_root_url();\n        let buttons;\n        if (props.is_mitm)\n        {\n            buttons = [\n                <Mitm_btn enable={false} on_click={props.no_click} key=\"no\"/>,\n                <Mitm_btn enable={true} on_click={props.yes_click} key=\"yes\"/>\n            ];\n        }\n        else\n        {\n            buttons = [<Geo_btn key=\"no\" enable={false}\n                country={props.src_country} on_click={props.no_click}/>];\n            if (countries.length<3)\n            {\n                buttons = buttons.concat(countries.map(c=>\n                    <Geo_btn key={'yes_'+c} enable={true} country={c}\n                      on_click={props.yes_click}/>));\n            }\n            else\n            {\n                buttons.push(<Geo_btn key={'yes_'+countries[0]} enable={true}\n                    country={countries[0]} on_click={props.yes_click}/>);\n                buttons.push(<More_btn key=\"more\" countries={countries}\n                    on_click={props.yes_click}/>);\n            }\n        }\n        return (\n            <div className=\"modal-body suggestion-body\">\n              {props.is_mitm ?\n              <div className=\"title\">\n                <div className=\"stop-icon\"/>\n                <T><span className=\"site-name\">{site}\n                </span> is blocked in your country or office</T>\n              </div> :\n              <div className=\"title\"><T>\n                Select <span className=\"site-name\">{site}</span> edition:\n              </T></div>}\n              <div className=\"buttons-container\">\n                {buttons}\n              </div>\n            </div>\n        );\n    }\n};\n\nclass Login_body extends React.PureComponent {\n    componentDidMount(){\n        perr('geo_login_show');\n        B.cookies.set({\n            url: 'https://hola.org',\n            name: 'email_verify_next_url',\n            value: get_url(),\n            expirationDate: (Date.now()+ms.HOUR)/1000,\n        });\n    }\n    render(){\n        let site = get_root_url();\n        let url = zescape.uri('https://hola.org/bext_login',\n            {uuid: be_popup_lib.get_uuid(), root_url: get_root_url()});\n        return (\n            <div className=\"modal-body login-body\">\n              <div className=\"title\">\n                <T>\n                  Sign in to unblock <span className=\"site-name\">{site}</span>\n                </T>\n                <span className=\"f32\">\n                  <span className={flag_cls(this.props.country)}/>\n                </span>\n              </div>\n              <div className=\"iframe-container\">\n                <iframe src={url}/>\n              </div>\n            </div>\n        );\n    }\n}\n\nclass Trial_subscribe_body extends React.PureComponent {\n    constructor(props){\n        super(props);\n        this.state = {plans: get_plans(), wait_time: 0, waited: false,\n            waiting: false};\n    }\n    componentDidMount(){\n        let _this = this;\n        etask(function*(){\n            let root_url = get_root_url();\n            let grace_period = yield be_trial.ecall('is_trial_grace_period',\n                [root_url]);\n            _this.perr('show', {grace_period, tab_active: is_tab_active(),\n                trial_left: _this.props.trial_left});\n        });\n    }\n    componentWillUnmount(){\n        if (this.timer)\n            this.timer = clearTimeout(this.timer);\n    }\n    perr(id, info){\n        let prefix = this.props.trial_left ? 'geo_trial_subscribe_' :\n            'geo_trial_ended_';\n        perr(prefix+id, info);\n    }\n    timer_tick(wait_ts){\n        let wait_time = Math.max(wait_ts-Date.now(), 0);\n        this.setState({wait_time});\n        if (wait_time>0)\n            this.timer = setTimeout(()=>this.timer_tick(wait_ts), ms.SEC);\n        else\n        {\n            this.setState({waited: true});\n            this.props.unblock_cb(this.props.country);\n        }\n    }\n    start_wait_timer(){\n        let _this = this;\n        etask(function*(){\n            let next_trial_ts = yield be_trial.ecall('get_next_trial_ts',\n                [get_root_url()]);\n            let wait = zutil.get(_this.props, 'site_conf.trial.wait',\n                15*ms.SEC);\n            _this.timer_tick(Math.max(next_trial_ts, Date.now()+wait));\n            if (wait>0)\n            {\n                _this.setState({waiting: true});\n                _this.need_wait();\n            }\n        });\n    }\n    need_wait(){\n        this.setState({need_wait: true});\n        setTimeout(()=>this.setState({need_wait: false}), 500);\n    }\n    on_click = plan=>{\n        let wait_time = this.state.wait_time;\n        if (plan!='free')\n            return void this.perr('plan_click', {plan, wait_time});\n        if (wait_time)\n        {\n            this.perr('plan_wait_click_free');\n            this.need_wait();\n            return;\n        }\n        this.perr('plan_click_free', {trial_left: this.props.trial_left});\n        if (this.props.trial_left)\n            return void this.props.close_cb();\n        if (!this.state.waited)\n            this.start_wait_timer();\n        else\n            this.props.unblock_cb(this.props.country);\n    };\n    render(){\n        let {props, state} = this;\n        let root_url = get_root_url();\n        let ref = 'trial_'+root_url.replace(/\\./g, '_');\n        let minutes_per_day = zutil.get(props, 'site_conf.plan_free_title') ||\n            <T><span>120</span> minutes every day</T>;\n        let trial_time = zutil.get(props, 'site_conf.trial.period', 15*ms.MIN);\n        let timer_ms = state.waiting ? state.wait_time : props.trial_left ||\n            trial_time;\n        return (\n            <div className=\"modal-body subscribe-body\">\n              <div className=\"buttons-container\">\n                <common_ui.Trial_free_plan on_click={this.on_click}\n                  site={root_url}\n                  need_wait={state.need_wait}\n                  waiting={state.waiting}\n                  minutes_per_day={minutes_per_day}\n                  time={ui_lib.format_time(timer_ms)}\n                  trial_left={props.trial_left}/>\n                {this.state.plans.map(plan=>\n                  <common_ui.Plan key={plan} plan={plan}\n                    on_click={this.on_click}\n                    href={be_vpn_util.plus_ref(ref, {plan, root_url})}/>)}\n              </div>\n            </div>\n        );\n    }\n}\n\nclass Geo_suggestion extends React.PureComponent {\n    constructor(props){\n        super(props);\n        this.state = {};\n        this.sync_size(props.slide);\n    }\n    componentDidUpdate(prev_props, prev_state){\n        if (prev_props.trial_error!=this.props.trial_error)\n            this.sync_size(this.props.slide);\n    }\n    perr(id, info){\n        pref_perr(this.props)(id, info);\n    }\n    sync_size(slide){\n        let width, height;\n                                         \n        if (slide=='trial_subscribe')\n        {\n            width = 50+250*(get_plans().length+1)+40;\n            height = 564;\n        }\n        else if (slide=='login')\n        {\n            width = 550;\n            height = 510;\n        }\n        else if (slide == 'stop_vpn_confirmation')\n        {\n            width = 550;\n            height = 362;\n        }\n        else\n        {\n            width = 270+220*Math.min(this.props.countries.length, 2);\n            height = 390;\n        }\n        if (this.props.trial_error)\n            height += 30;\n        this.props.size_cb({width: width+8, height: height+8, fade: true,\n            center: true}, {width, height});\n    }\n    slide_exited_cb = ()=>{\n        this.sync_size(this.props.slide);\n    };\n    ignore(){ this.props.close_cb(); }\n    close_click = ()=>{\n        this.perr('suggestion_close');\n        this.ignore();\n    };\n    no_click = ()=>{\n        this.perr('suggestion_no');\n        this.ignore();\n    };\n    yes_click = country=>{\n        this.perr('suggestion_yes', {country});\n        this.props.unblock_cb(country);\n    };\n    try_again = ()=>{\n        let country = this.props.country;\n        this.perr('suggestion_try_again', {country});\n        this.props.unblock_cb(country);\n    };\n    render(){\n        let {props} = this;\n        return (\n            <E.Wrap>\n              <E.Modal_header close_click={this.close_click}\n                title={props.slide=='trial_subscribe' && 'Choose your plan'}\n                show_signin={false} slide={props.slide}/>\n              <ui_lib.Progress_bar visible={props.busy}/>\n              {props.trial_error &&\n              <div className=\"error-message\">\n                <T>We've encountered an error. Please <a\n                  onClick={this.try_again}><T>try again</T></a></T>\n              </div>}\n              <Slides_switch slide={props.slide}\n                exited_cb={this.slide_exited_cb}>\n                <E.Suggestion_body key='suggestion'\n                  countries={props.countries}\n                  src_country={props.src_country}\n                  yes_click={this.yes_click}\n                  no_click={this.no_click}\n                  prefix={props.prefix}/>\n                <Login_body key='login' country={props.country}/>\n                <Trial_subscribe_body key='trial_subscribe'\n                  site_conf={props.site_conf}\n                  trial_left={props.trial_left}\n                  country={props.country}\n                  close_cb={props.close_cb}\n                  unblock_cb={props.unblock_cb}/>\n                <Stop_vpn_confirmation key='stop_vpn_confirmation'\n                  country={props.country} is_mitm={false}\n                  close_vpn={this.close_click}/>\n              </Slides_switch>\n            </E.Wrap>\n        );\n    }\n}\n\nclass Stop_vpn_confirmation extends React.PureComponent {\n    stop_vpn = ()=>{\n        let root_url = get_root_url();\n        pref_perr(this.props)(`watermark_stop_vpn`);\n        be_trial.ecall('on_popup_closed', [root_url]);\n        be_info.fcall('set_site_storage', [root_url,\n            'trial.dont_show_ended', true]);\n        be_vpn.fcall('stop_vpn', [get_url(), get_tab_id()]);\n    };\n    render(){\n        let {country} = this.props;\n        return <div className=\"modal-body stop-vpn-confirmation\">\n          <div className='title'><T>Do you want to stop trial?</T></div>\n          <div className='buttons-container'>\n            <Stop_btn on_click={this.stop_vpn} title=\"Stop trial\"\n              country={country}/>\n            <Geo_btn on_click={this.props.close_vpn} title=\"Back to trial\"\n              country={country}/>\n          </div>\n        </div>;\n    }\n}\n\nclass Verify_email extends React.PureComponent {\n    constructor(props){\n        super(props);\n        this.state = {resent: 0};\n        let width = 550;\n        let height = 310;\n        this.props.size_cb({width: width+8, height: height+8, fade: true,\n            center: true}, {width, height});\n    }\n    componentDidMount(){\n        perr('geo_verify_email_show');\n    }\n    resend_click = ()=>{\n        this.setState({resent: this.state.resent+1});\n        be_info.ecall('resend_verification_email');\n        perr('geo_verify_email_resend');\n    };\n    render(){\n        let {state, props} = this;\n        let email = zutil.get(props, 'user.emails.0.value');\n        let slide = 'verify_email';\n                                                 \n        return (\n            <E.Wrap>\n              <E.Modal_header/>\n              <Slides_switch slide={slide} refresh={state.resent}>\n                <div key={slide} className=\"modal-body verify-email-body\">\n                  <div className=\"title\">\n                    <T>Verify your email address</T>\n                  </div>\n                  <p><T>Verification email was sent to <b>{email}</b></T></p>\n                  <p><T>Check your mailbox and follow the instructions to\n                    complete the registration process.</T></p>\n                  <div className=\"resend-btn\" onClick={this.resend_click}>\n                    <T>Resend email{state.resent ? ' again' : ''}</T>\n                  </div>\n                  <p><T>Problems? Contact us at <a href=\"mailto:help@hola.org\"\n                    target=\"_parent\">help@hola.org</a></T></p>\n                </div>\n              </Slides_switch>\n            </E.Wrap>\n        );\n    }\n}\n\nE.Popup_base = class Popup_base extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            mode: props.mode,\n            position: props.position,\n            is_plus: be_ext.get('is_premium'),\n        };\n    }\n    componentDidMount(){\n        this.on_premium_change = ()=>\n            this.setState({is_plus: be_ext.get('is_premium')});\n        be_ext.on('change:is_premium', this.on_premium_change);\n        this.update_container();\n    }\n    componentWillUnmount(){\n        be_ext.off('change:is_premium', this.on_premium_change);\n    }\n    componentDidUpdate(prev_props, prev_state){\n        if (this.state.mode!=prev_state.mode)\n            this.update_container();\n    }\n    update_container(){\n        $('#all').attr('class', this.state.mode);\n    }\n    size_cb = (iframe_opt, modal_opt)=>{\n        let {position} = this.state;\n        set_modal_pos({position, ...modal_opt});\n        set_iframe_pos({position, ...iframe_opt});\n    };\n    show_vpn_ui_cb = ()=>{\n        set_iframe_pos({width: 274, height: 431, margin_top: 5, margin_left: 5,\n            margin_bottom: 5, margin_right: 15, fade: false,\n            position: this.state.position, animation_time: 300});\n        this.props.on_show_vpn_ui();\n    };\n    position_cb = position=>{\n        be_info.fcall('set_site_storage', [get_root_url(),\n            'watermark_pos', position]);\n        this.setState({position});\n    };\n    set_mode(mode){\n        if (this.state.mode==mode)\n            return;\n        this.setState({mode});\n    }\n    render(){\n        return ReactDOM.createPortal(\n            <div className=\"modal\">{this.render_inner()}</div>,\n            $('#all')[0]);\n    }\n};\n\nclass Watermark_popup extends E.Popup_base {\n    constructor(props){\n        super(props);\n        let state = this.state = this.state||{};\n        state.trial = props.trial;\n        state.slide = props.slide;\n        state.countries = props.countries;\n        state.country = props.country;\n        if (state.trial)\n        {\n            state.trial_left = this.get_trial_left();\n            this.monitor_trial();\n        }\n    }\n    componentDidMount(){\n        super.componentDidMount();\n        be_premium.on('user_updated', this.on_user_updated);\n        be_vpn.on('force_trial', this.on_force_trial);\n        be_vpn.on('trial_timer_click', this.trial_timer_click_cb);\n        be_ext.on('trial_start', this.on_trial_start);\n        be_ext.on('trial_change', this.on_trial_change);\n        be_ui_popup_ext.on('body_click', this.on_body_click);\n    }\n    componentWillUnmount(){\n        super.componentWillUnmount();\n        be_premium.off('user_updated', this.on_user_updated);\n        be_vpn.off('force_trial', this.on_force_trial);\n        be_vpn.off('trial_timer_click', this.trial_timer_click_cb);\n        be_ext.off('trial_start', this.on_trial_start);\n        be_ext.off('trial_change', this.on_trial_change);\n        be_ui_popup_ext.off('body_click', this.on_body_click);\n        if (this.trial_timer)\n            this.trial_timer = clearTimeout(this.trial_timer);\n    }\n    componentDidUpdate(prev_props, prev_state){\n        super.componentDidUpdate(prev_props, prev_state);\n        if (this.state.mode==SUBSCRIBE && this.can_close_watermark())\n            this.props.on_close();\n        if (this.state.trial!=prev_state.trial)\n            this.monitor_trial();\n    }\n    on_force_trial = opt=>{\n        if (opt.tab_id!=get_tab_id() || this.state.mode!=SUGGESTION ||\n            !opt.country)\n        {\n            return;\n        }\n        if (this.state.slide=='suggestion')\n            this.unblock_cb(opt.country);\n        else\n            this.setState({country: opt.country});\n    };\n    on_trial_start = ()=>{\n        let _this = this;\n        etask(function*(){\n            let root_url = get_root_url();\n            let trial = yield be_trial.ecall('get_trial_active', [root_url]);\n            if (trial)\n            {\n                let country = yield be_info.ecall('get_site_storage',\n                    [root_url, 'trial.country']);\n                _this.setState({trial, country, trial_expired: false});\n                _this.set_mode(WATERMARK);\n            }\n        });\n    };\n    on_trial_change = (root_url, trial)=>{\n        if (root_url==get_root_url())\n            this.setState({trial});\n    };\n    on_user_updated = ()=>{\n        let {state} = this, _this = this;\n        etask(function*(){\n                                                                              \n                          \n            if (state.mode!=SUGGESTION || state.slide!='login' ||\n                !be_ext.get('user_id'))\n            {\n                return;\n            }\n            if (!_this.geo_login_success_sent)\n                perr('geo_login_success');\n            _this.geo_login_success_sent = true;\n            let trial = yield be_trial.ecall('get_trial_active',\n                [get_root_url()]);\n            _this.setState({trial}, ()=>_this.unblock_cb(_this.state.country));\n        });\n    };\n    get_trial_left(){\n        let trial = this.state.trial;\n        if (!trial)\n            return;\n        return Math.max(trial.expire_ts-Date.now(), 0);\n    }\n    monitor_trial(){\n        let trial = this.state.trial;\n        if (!trial)\n        {\n            this.trial_timer = null;\n            return;\n        }\n        let trial_left = this.get_trial_left();\n        this.setState({trial_left});\n        if (trial_left<=0)\n        {\n            this.trial_timer = null;\n            this.on_trial_ended();\n            return;\n        }\n        this.trial_timer = setTimeout(()=>this.monitor_trial(), date.ms.SEC);\n    }\n    can_close_watermark(){\n        return this.state.is_plus && !this.state.trial;\n    }\n    on_trial_ended(){\n        this.setState({slide: 'trial_subscribe', trial: null,\n            trial_expired: true});\n        this.set_mode(SUGGESTION);\n    }\n    do_unblock(country){\n        do_unblock(country, this.state.trial);\n        this.set_mode(WATERMARK);\n    }\n    unblock_cb = country=>{\n        if (this.unblock_et)\n            return;\n        let _this = this;\n        this.setState({country});\n        etask(function*(){\n            _this.unblock_et = this;\n            _this.setState({busy: true});\n            this.finally(()=>{\n                _this.unblock_et = null;\n                _this.setState({busy: false});\n            });\n            let root_url = get_root_url();\n            perr('geo_suggestion_unblock', {country, slide: _this.state.slide,\n                user_id: be_ext.get('user_id'), root_url});\n            let site_conf = _this.props.site_conf || {};\n            if (!site_conf.require_plus || _this.state.is_plus ||\n                _this.state.trial)\n            {\n                _this.do_unblock(country);\n                return;\n            }\n            if (!be_ext.get('user_id'))\n            {\n                _this.setState({slide: 'login'});\n                _this.set_mode(SUGGESTION);\n                return;\n            }\n            if ((yield be_trial.ecall('get_next_trial_ts', [root_url])) >\n                Date.now())\n            {\n                _this.setState({slide: 'trial_subscribe'});\n                _this.set_mode(SUGGESTION);\n                return;\n            }\n            try {\n                let trial = yield start_trial(country);\n                _this.setState({trial, trial_error: null}, ()=>\n                    _this.do_unblock(country));\n            } catch(e){\n                _this.setState({trial_error: e.message||true});\n            }\n        });\n    };\n    on_body_click = ()=>{\n        if (this.state.mode==WATERMARK && this.can_close_watermark())\n            this.props.on_close();\n        else if (this.state.mode==SUBSCRIBE)\n            this.set_mode(WATERMARK);\n    };\n    close_cb = ()=>{\n        let {mode} = this.state;\n        let type = mode==SUGGESTION ? 'suggestion' : 'watermark';\n        if (this.can_close_watermark())\n            return void this.props.on_close({type});\n        else if (mode==SUGGESTION)\n        {\n            if (this.state.trial)\n                return void this.set_mode(WATERMARK);\n            let trial_expired = this.state.trial_expired;\n            if (trial_expired && this.state.slide == 'trial_subscribe')\n                return void this.setState({slide: 'stop_vpn_confirmation'});\n            if (trial_expired && this.state.slide == 'stop_vpn_confirmation')\n                return void this.setState({slide: 'trial_subscribe'});\n            let root_url = get_root_url();\n                                          \n            be_trial.ecall('on_popup_closed', [root_url]);\n            if (this.state.slide=='trial_subscribe'\n                || this.state.slide=='stop_vpn_confirmation')\n            {\n                be_info.fcall('set_site_storage', [root_url,\n                    'trial.dont_show_ended', true]);\n            }\n            this.props.on_close({type});\n            return;\n        }\n        if (mode==SUBSCRIBE)\n            this.set_mode(WATERMARK);\n        else if (mode==WATERMARK)\n            this.set_mode(SUBSCRIBE);\n    };\n    trial_timer_click_cb = ()=>{\n        this.setState({slide: 'trial_subscribe'});\n        this.set_mode(SUGGESTION);\n    };\n    verified_cb = ()=>{\n                           \n    };\n    render_inner(){\n        let {state, props} = this;\n        switch (state.mode)\n        {\n        case WATERMARK: return <E.Watermark\n            country={state.country}\n            position={state.position}\n            trial={state.trial}\n            trial_left={state.trial_left}\n            position_cb={this.position_cb}\n            close_cb={this.close_cb}\n            show_vpn_ui_cb={this.show_vpn_ui_cb}\n            trial_timer_click_cb={this.trial_timer_click_cb}\n            size_cb={this.size_cb}/>;\n        case SUBSCRIBE: return <E.Subscribe\n            country={state.country}\n            close_cb={this.close_cb}\n            size_cb={this.size_cb}/>;\n        case SUGGESTION: return <Geo_suggestion\n            country={state.country}\n            countries={state.countries}\n            trial_left={state.trial_left}\n            src_country={props.src_country}\n            site_conf={props.site_conf}\n            slide={state.slide}\n            trial_error={state.trial_error}\n            busy={state.busy}\n            close_cb={this.close_cb}\n            unblock_cb={this.unblock_cb}\n            size_cb={this.size_cb}\n            prefix={props.prefix}/>;\n        case VERIFY_EMAIL: return <Verify_email\n            user={props.user}\n            size_cb={this.size_cb}\n            verified_cb={this.verified_cb}/>;\n        }\n    }\n}\n\nlet inited;\nE.init = ui_popup=>{\n    if (inited)\n        return;\n    inited = true;\n    be_ui_popup_ext = ui_popup;\n    be_rule = ui_popup.be_rule;\n    be_ext = ui_popup.be_ext;\n    be_vpn = ui_popup.be_vpn;\n    be_info = ui_popup.be_info;\n    be_premium = ui_popup.be_premium;\n    be_trial = ui_popup.be_trial;\n    be_tabs = ui_popup.be_tabs;\n    be_tpopup = ui_popup.be_tpopup;\n    be_popup_main = ui_popup.be_popup_main;\n};\n\nlet el;\nconst unmount = ()=>{\n    ReactDOM.unmountComponentAtNode(el[0]);\n    el.remove();\n};\n\nconst on_close = opt=>{\n    opt = opt||{};\n    unmount();\n    be_ui_popup_ext.set_dont_show_again({\n        tab_id: get_tab_id(),\n        root_url: get_root_url(),\n        period: 'default',\n        src: 'x_btn',\n        type: opt.type || 'watermark',\n    });\n};\n\nconst on_show_vpn_ui = ()=>{\n    unmount();\n    $('#all').attr('style', '');\n    $('#all').attr('class', '');\n    be_ui_popup_ext.set_tpopup_type(null);\n};\n\nE.render = (opt = {})=>etask(function*(){\n    let url = get_url();\n    let root_url = get_root_url();\n                                                                             \n                 \n    if (browser=='firefox')\n        yield be_premium.fcall('refresh_user');\n    let user = be_premium.get('user');\n    let position = yield be_info.ecall('get_site_storage', [get_root_url(),\n        'watermark_pos', 'top_right']);\n    let site_conf = yield be_vpn.ecall('get_site_conf', [url]);\n    let is_trial_ended = !be_ext.get('is_premium') &&\n        (yield be_trial.ecall('is_trial_expired', [root_url]));\n    let trial = yield be_trial.ecall('get_trial_active', [root_url]);\n    let is_grace_period = yield be_trial.ecall('is_trial_grace_period',\n        [root_url]);\n    let force_trial = yield be_info.ecall('get_site_storage', [root_url,\n        'force_trial']);\n    let force_country = force_trial && force_trial.country;\n    if (force_trial)\n    {\n        yield be_info.ecall('set_site_storage', [root_url, 'force_trial',\n            null]);\n    }\n    let rule_enabled = get_enabled_rule();\n                                                                            \n    if (rule_enabled && !trial && site_conf && site_conf.require_plus &&\n        !be_ext.get('is_premium') && !is_grace_period)\n    {\n        perr('rule_without_trial', site_conf);\n        be_vpn.fcall('stop_vpn', [url, get_tab_id()]);\n        rule_enabled = null;\n    }\n    let mode, slide, countries, country;\n    let src_country = be_info.get('country');\n    let suggestion_conf = be_util.get_suggestion_conf(site_conf, src_country)\n        || {};\n    let suggested = force_country || suggestion_conf.proxy;\n    if (opt.suggest_country || opt.force_suggestion)\n    {\n        suggested = yield get_all_countries(src_country);\n        if (opt.suggest_country)\n        {\n            suggested = suggested.filter(c=>c!=opt.suggest_country);\n            suggested.unshift(opt.suggest_country);\n        }\n    }\n    if (suggested && !Array.isArray(suggested))\n        suggested = [suggested];\n    if (force_country && !is_trial_ended && !trial)\n    {\n        country = force_country;\n        if (user)\n        {\n            try { trial = yield start_trial(country); } catch(e){}\n            if (trial)\n            {\n                do_unblock(country, trial);\n                mode = WATERMARK;\n            }\n        }\n        else\n        {\n            mode = SUGGESTION;\n            slide = 'login';\n        }\n    }\n    else if ((!rule_enabled || is_grace_period) && suggested &&\n        suggested.length && !trial)\n    {\n        mode = SUGGESTION;\n        if (suggested)\n        {\n            suggested = suggested.map(c=>c.toLowerCase());\n            let all_index = suggested.indexOf('*');\n            if (all_index!=-1)\n            {\n                let all = yield get_all_countries(src_country);\n                all = all.filter(c=>!suggested.includes(c));\n                suggested.splice(all_index, 1, ...all);\n            }\n            countries = suggested;\n        }\n        slide = is_trial_ended ? 'trial_subscribe' : 'suggestion';\n        if (is_trial_ended)\n        {\n            let rule = get_rule();\n            country = force_country || rule&&rule.country ||\n                (yield be_info.ecall('get_site_storage', [root_url,\n                'trial.country']));\n        }\n    }\n    else\n    {\n        country = rule_enabled && rule_enabled.country || 'us';\n        mode = WATERMARK;\n    }\n                                          \n    if (0 && be_vpn_util.must_verify_email(user))\n        mode = VERIFY_EMAIL;\n    $('html').css({width: '100%', height: '100%', maxWidth: '100%',\n        maxHeight: '100%'});\n    $('body').css({animation: 'none'});\n    el = $('<div class=watermark-popup-root/>').appendTo($('body'));\n    ReactDOM.render(<Watermark_popup\n        on_close={on_close}\n        on_show_vpn_ui={on_show_vpn_ui}\n        position={position}\n        mode={mode}\n        slide={slide}\n        user={user}\n        country={country}\n        countries={countries}\n        src_country={src_country}\n        site_conf={site_conf}\n        trial={trial}\n        prefix={opt.prefix}/>, el[0]);\n});\n\nexport default E;\n"]}